/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Context, Serializer } from '@metaplex-foundation/umi';
import {
  EscrowConstraintType,
  EscrowConstraintTypeArgs,
  getEscrowConstraintTypeSerializer,
} from '.';

export type EscrowConstraint = {
  tokenLimit: bigint;
  constraintType: EscrowConstraintType;
  transferEffects: number;
};

export type EscrowConstraintArgs = {
  tokenLimit: number | bigint;
  constraintType: EscrowConstraintTypeArgs;
  transferEffects: number;
};

export function getEscrowConstraintSerializer(
  context: Pick<Context, 'serializer'>
): Serializer<EscrowConstraintArgs, EscrowConstraint> {
  const s = context.serializer;
  return s.struct<EscrowConstraint>(
    [
      ['tokenLimit', s.u64()],
      ['constraintType', getEscrowConstraintTypeSerializer(context)],
      ['transferEffects', s.u16()],
    ],
    { description: 'EscrowConstraint' }
  ) as Serializer<EscrowConstraintArgs, EscrowConstraint>;
}
